result['pl'] = {}; result['pl']['program'] = {}; result['pl']['vysledky'] = {}; result['pl']['tabulka'] = {};
  result['nhl'] = {}; result['nhl']['program'] = {}; result['nhl']['vysledky'] = {};

  //first get to the premier league page
  await Promise.all([   //click the first button in left menu - always premier league
    page.click('a.leftMenu__href'),
    page.waitForNavigation({ waitUntil: 'networkidle0' })
  ]);

  //get the live matches if there are some
  let live_teams = await page.evaluate(() => Array.from(document.querySelectorAll("div.event__match.event__match--live > .event__participant")).map( (team) => team.innerText )); 
  let live_scores = await page.evaluate(() => Array.from(document.querySelectorAll("div.event__match.event__match--live > .event__score")).map( (team) => team.innerText ));
  for(let i=0; i< live_teams.length; i+=2){
    result['pl']['vysledky']['LIVE'+i/2] = live_teams[i] + '   ' + live_scores[i] + ':' + live_scores[i+1] + '   ' + live_teams[i+1];
  }
  
  await Promise.all([     //now go to the results page - already finished matches
    page.click('a.tabs__tab.results'),
    page.waitForNavigation({ waitUntil: 'networkidle0' })
  ]);

  //get the last 10 finished matches
  let finished_teams = await page.evaluate(() => Array.from(document.querySelectorAll("div.event__participant")).map( (team) => team.innerText )); 
  let finished_scores = await page.evaluate(() => Array.from(document.querySelectorAll("div.event__score")).map( (team) => team.innerText ));
  let finished_times = await page.evaluate(() => Array.from(document.querySelectorAll("div.event__time")).map( (team) => team.innerText ));
  for(let i=0; i< 20; i+=2){
    result['pl']['vysledky'][i/2] = finished_times[i/2] + '; ' + finished_teams[i] + '   ' + finished_scores[i] + ':' + finished_scores[i+1] + '   ' + finished_teams[i+1];
  }

  await Promise.all([   //now go to the program page - matches to be played
    page.click('a.tabs__tab.fixtures'),
    page.waitForNavigation({ waitUntil: 'networkidle0' })
  ]);

  //get the next 10 finished matches
  let next_teams = await page.evaluate(() => Array.from(document.querySelectorAll("div.event__participant")).map( (team) => team.innerText )); 
  let next_times = await page.evaluate(() => Array.from(document.querySelectorAll("div.event__time")).map( (team) => team.innerText ));
  for(let i=0; i< 20; i+=2){
    result['pl']['program'][i/2] = next_times[i/2] + '; ' + next_teams[i] + '   x   ' + next_teams[i+1];
  }
  
  await Promise.all([     //go to the league table page
    page.click('a.tabs__tab.standings_table'),
    page.waitForNavigation({ waitUntil: 'networkidle0' })
  ]);

  //get all the table data
  let table_teams = await page.evaluate(() => Array.from(document.querySelectorAll("div.ui-table__row")).map( (team) => team.innerText )); 
  for(let i=0; i< 20; i++){
    let table_split = table_teams[i].split('\n');
    result['pl']['tabulka'][i+1] = table_split[1] + ';' + table_split[2] + ';' + table_split[7];
  }

  //now go to the nhl page and do the same
  await Promise.all([
    page.click('a[data-sport-id="4"]'),
    page.waitForNavigation({ waitUntil: 'networkidle0' })
  ]);
  await Promise.all([
    page.click('[title="USA: NHL"]'),
    page.waitForNavigation({ waitUntil: 'networkidle0' })
  ]);

  let live_teams_nhl = await page.evaluate(() => Array.from(document.querySelectorAll("div.event__match.event__match--live > .event__participant")).map( (team) => team.innerText )); 
  let live_scores_nhl = await page.evaluate(() => Array.from(document.querySelectorAll("div.event__match.event__match--live > .event__score")).map( (team) => team.innerText ));
  for(let i=0; i< live_teams_nhl.length; i+=2){
    result['nhl']['vysledky']['LIVE'+i/2] = live_teams_nhl[i] + '   ' + live_scores_nhl[i] + ':' + live_scores_nhl[i+1] + '   ' + live_teams_nhl[i+1];
  }

  await Promise.all([
    page.click('a.tabs__tab.results'),
    page.waitForNavigation({ waitUntil: 'networkidle0' })
  ]);

  let finished_teams_nhl = await page.evaluate(() => Array.from(document.querySelectorAll("div.event__participant")).map( (team) => team.innerText )); 
  let finished_scores_nhl = await page.evaluate(() => Array.from(document.querySelectorAll("div.event__score")).map( (team) => team.innerText ));
  let finished_times_nhl = await page.evaluate(() => Array.from(document.querySelectorAll("div.event__time")).map( (team) => team.innerText ));
  for(let i=0; i< 20; i+=2){
    result['nhl']['vysledky'][i/2] = finished_times_nhl[i/2] + '; ' + finished_teams_nhl[i] + '   ' + finished_scores_nhl[i] + ':' + finished_scores_nhl[i+1] + '   ' + finished_teams_nhl[i+1];
  }

  await Promise.all([
    page.click('a.tabs__tab.fixtures'),
    page.waitForNavigation({ waitUntil: 'networkidle0' })
  ]);

  let next_teams_nhl = await page.evaluate(() => Array.from(document.querySelectorAll("div.event__participant")).map( (team) => team.innerText )); 
  let next_times_nhl = await page.evaluate(() => Array.from(document.querySelectorAll("div.event__time")).map( (team) => team.innerText ));
  for(let i=0; i< 20; i+=2){
    result['nhl']['program'][i/2] = next_times_nhl[i/2] + '; ' + next_teams_nhl[i] + '   x   ' + next_teams_nhl[i+1];
  }
